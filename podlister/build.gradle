/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.6/userguide/tutorial_java_projects.html
 */

plugins {
    id 'java'
    id 'application'
    id 'io.freefair.lombok' version '5.1.0'
}

repositories {
    jcenter()
}

group 'com.jeeatwork.ms'
version '1.0.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

dependencies {
    implementation group: 'io.fabric8', name: 'kubernetes-client', version: '5.0.2'
    implementation group: 'org.apache.kafka', name: 'kafka-clients', version: '2.7.0'
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.12'
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
    testImplementation 'commons-io:commons-io:2.8.0'

}

application {
    mainClassName = 'com.jeeatwork.ms.podlister.App'
}

test {
    useJUnitPlatform()
    systemProperty "kubernetes.disable.autoConfig", true
    systemProperty "no.proxy", "127.0.0.1,localhost"
    systemProperty "http.proxy", System.getenv("http_proxy")
    systemProperty "https.proxy", System.getenv("https_proxy")
    systemProperty "e2eTest", System.getenv("E2ETEST")
    systemProperty "k8s.cluster.url", System.getenv("K8S_CLUSTER_URL")
    systemProperty "k8s.cluster.ca.file", "$projectDir/src/test/resources/secrets/cluster_ca.pem"
    systemProperty "k8s.cluster.client.key.file", "$projectDir/src/test/resources/secrets/client_key.pem"
    systemProperty "k8s.cluster.client.cert.file", "$projectDir/src/test/resources/secrets/client_cert.pem"
    systemProperty "k8s.cluster.namespace", "kafka-dev"
}

//create a single Jar with all dependencies
task fatJar(type: Jar) {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    manifest {
        attributes 'Implementation-Title': "$application.mainClassName",
                'Implementation-Version': archiveVersion,
                'Main-Class': "$application.mainClassName"
    }
    archiveBaseName = 'podlister'
    from { configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

fatJar.mustRunAfter jar
